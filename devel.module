<?php

// This module is holds functions useful for Drupal development.
// Please contribute!

// suggested profiling and stacktrace library from http://www.xdebug.org/index.php
// if you activate this extension, this module will use it.
// you probably want these php.ini or .htaccess directives:
// xdebug.auto_profile=1
// xdebug.auto_profile_mode=3
// xdebug.output_dir="/php"
// xdebug.default_enable

// custom error handling is annoying when stepping though in a debugger
function devel_init() {
  restore_error_handler();
}

function devel_timer() {
  global $timer;
  $stop = explode(" ", microtime());
  $diff = round(($stop[0] - $timer[0])*1000, 2);
  return "Page execution time was $diff ms. ";
}

// don't move this to _footer() hook since this must run after drupal_page_footer() in order 
// to work for cached pages
function devel_exit() {
  if (variable_get("dev_query", 0)) {
    $output = devel_query_table();
    print "<div style=\"clear:both;\">";
    function_exists('theme_box') ? theme("box", t("Query log"), $output) : print $output; //there is no theme() for a cached (aka bootstrap) page
    print "</div>";
  }
  // lots of profile info. not sure how to use it yet.
  if (extension_loaded('xdebug') && ini_get("xdebug.auto_profile")) {
    xdebug_dump_function_profile(3);
  };
}

function devel_query_table() {
  global $queries;
  
  $header = array ("ms", "#", "query");  
  foreach ($queries as $query) {
    $text[] = $query[0];
    $sum += $query[1];
  }
  $counts = array_count_values($text);
  
  $i = 0;
  foreach ($queries as $query) {
    $diff = round($query[1]*1000,2);
    $count = $counts[$query[0]];    
    if ($diff > 5) {
      $cell[$i][] = array ("data" => $diff, "class" => "marker");
    }
    else {
      $cell[$i][] = $diff;
    }    
    if ($count > 1) {
      $cell[$i][] = array ("data" => $count, "class" => "marker");
    }
    else {
      $cell[$i][] = $count;
    }
    $cell[$i][] = htmlspecialchars($query[0], ENT_NOQUOTES) ; //can't use drupal_specialchars() during a bootstrap
    $i++;
  }
  // don't t() this text. it has to work for a cached (aka bootstrap) page.
  $output = 'Executed '. count($queries). ' count queries in '. round($sum * 1000, 2). ' microseconds. '.
            'Queries taking longer than '. variable_get("devel_execution", 5). ' ms are <span class="marker">highlighted</span>. '.
            devel_timer();
  if (function_exists('theme_table')) {
    $output .= theme("table", $header, $cell);
  }
  else {
    $output .= devel_table($header, $cell);
  }
  return $output;
}

// basic implementation of theme_table() for bootstrapped pages that didn't include common.inc
function devel_table($header, $rows) {
  $output = "<table>\n";

  $output .= " <tr>";
  foreach ($header as $cell) {
    $output .= devel_table_cell($cell, 1);
  }
  $output .= " </tr>\n";
  
  if (is_array($rows)) {
    foreach ($rows as $number => $row) {
      if ($number % 2 == 1) {
        $output .= " <tr class=\"light\">";
      }
      else {
        $output .= " <tr class=\"dark\">";
      }

      foreach ($row as $cell) {
        $output .= devel_table_cell($cell, 0);
      }
      $output .= " </tr>\n";
    }
  }
  $output .= "</table>\n";
  return $output;
}

function devel_table_cell($cell, $header = 0) {
  if (is_array($cell)) {
    $data = $cell["data"];
    foreach ($cell as $key => $value) {
      if ($key != "data")  {
        $attributes .= " $key=\"$value\"";
      }
    }
  }
  else {
    $data = $cell;
  }
  
  if ($header) {
    return "<th$attributes>$data</th>";
  }
  else {
    return "<td$attributes>$data</td>";
  }
}

// handy pretty print of arrays and objects. like var_dump()
function dprint_r($arr) {
  print "<pre>";
  print_r($arr);
  print "</pre>";
} 

// handy pretty print of call stack. no xdebug dependency
function ddebug_backtrace() {
  dprint_r(debug_backtrace());
}

function  devel_help($section) {
  $output = "";

  switch ($section) {
    case 'admin/system/modules#description':
      $output = t("Development helper functions");;
      break;
  }
  return $output;
}

function devel_settings() {  
  $output = form_select(t("Display Page Timer"), "dev_timer", variable_get("dev_timer", 0), array(t("Disabled"), t("Enabled")), t("Display page execution time in the query log box."));
  $output .= form_select(t("Display query log"), "dev_query", variable_get("dev_query", 0), array(t("Disabled"), t("Enabled")), t("Display a log of the database queries needed to generate the current page, the and the execution time for each. Also, a queries which are repeated during a single page view are summed in the # column, and printed in red since they are candidates for caching."));
  $output .= form_textfield("Query execution threshhold", "devel_execution", variable_get("devel_execution", 5), 4, 4, t("Enter an integer in milliseconds. Any query which takes longer than this many milliseconds will be highlighted in the query log. This indicates a possibliy inefficient query, or a candidate for caching."));
  return $output;
}

?>
